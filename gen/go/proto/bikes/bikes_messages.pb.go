// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/bikes/bikes_messages.proto

package bikes

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Bike struct {
	Id        string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	OwnerName string `protobuf:"bytes,2,opt,name=owner_name,json=ownerName" json:"owner_name,omitempty"`
	Type      string `protobuf:"bytes,3,opt,name=type" json:"type,omitempty"`
	Make      string `protobuf:"bytes,4,opt,name=make" json:"make,omitempty"`
	Serial    string `protobuf:"bytes,5,opt,name=serial" json:"serial,omitempty"`
}

func (m *Bike) Reset()                    { *m = Bike{} }
func (m *Bike) String() string            { return proto.CompactTextString(m) }
func (*Bike) ProtoMessage()               {}
func (*Bike) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *Bike) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Bike) GetOwnerName() string {
	if m != nil {
		return m.OwnerName
	}
	return ""
}

func (m *Bike) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Bike) GetMake() string {
	if m != nil {
		return m.Make
	}
	return ""
}

func (m *Bike) GetSerial() string {
	if m != nil {
		return m.Serial
	}
	return ""
}

func init() {
	proto.RegisterType((*Bike)(nil), "bikerenting.grpc.bikes.v1.Bike")
}

func init() { proto.RegisterFile("proto/bikes/bikes_messages.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 172 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x2c, 0xce, 0xb1, 0x0e, 0x82, 0x30,
	0x10, 0x06, 0xe0, 0x80, 0x80, 0xe1, 0x06, 0x87, 0x1b, 0x4c, 0x1d, 0x4c, 0x88, 0x93, 0x53, 0x8d,
	0xf1, 0x0d, 0x78, 0x00, 0x07, 0x47, 0x17, 0x52, 0xe4, 0x42, 0x2e, 0xd8, 0x42, 0x5a, 0xd4, 0xf8,
	0xf6, 0xa6, 0x87, 0x4b, 0xf3, 0xf7, 0xfb, 0x6f, 0xf8, 0xa1, 0x9a, 0xfc, 0x38, 0x8f, 0xa7, 0x96,
	0x07, 0x0a, 0xcb, 0xdb, 0x58, 0x0a, 0xc1, 0xf4, 0x14, 0xb4, 0x54, 0xb8, 0x8b, 0xea, 0xc9, 0xcd,
	0xec, 0x7a, 0xdd, 0xfb, 0xe9, 0xa1, 0xe5, 0x4c, 0xbf, 0xcf, 0x87, 0x17, 0x64, 0x35, 0x0f, 0x84,
	0x1b, 0x48, 0xb9, 0x53, 0x49, 0x95, 0x1c, 0xcb, 0x5b, 0xca, 0x1d, 0xee, 0x01, 0xc6, 0x8f, 0x23,
	0xdf, 0x38, 0x63, 0x49, 0xa5, 0xe2, 0xa5, 0xc8, 0xd5, 0x58, 0x42, 0x84, 0x6c, 0xfe, 0x4e, 0xa4,
	0x56, 0x52, 0x48, 0x8e, 0x66, 0xcd, 0x40, 0x2a, 0x5b, 0x2c, 0x66, 0xdc, 0x42, 0x11, 0xc8, 0xb3,
	0x79, 0xaa, 0x5c, 0xf4, 0xff, 0xab, 0xd7, 0xf7, 0x5c, 0x26, 0xb4, 0x85, 0x2c, 0xbc, 0xfc, 0x02,
	0x00, 0x00, 0xff, 0xff, 0x6f, 0x45, 0x68, 0x43, 0xc5, 0x00, 0x00, 0x00,
}
